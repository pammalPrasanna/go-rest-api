definitions:
  main.QueryParamsv1:
    properties:
      mandateQuery1:
        type: string
      optionalQuery1:
        type: string
    required:
    - mandateQuery1
    type: object
  main.QueryParamsv2:
    properties:
      mandateQuery1:
        type: string
      mandateQuery2:
        type: string
      mandateQuery3:
        type: string
      optionalQuery1:
        type: string
      optionalQuery2:
        type: string
      optionalQuery3:
        type: string
    required:
    - mandateQuery1
    - mandateQuery2
    - mandateQuery3
    type: object
  main.book:
    properties:
      author:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  main.book2:
    properties:
      author:
        type: string
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  description: Books API documentation
  title: Books API
paths:
  /api/v1/books:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.book'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: get all books
      tags:
      - books_v1
    post:
      consumes:
      - application/json
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.book'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: create a new book
      tags:
      - books_v1
  /api/v1/books/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.book'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "409":
          description: Unable to delete book
          schema:
            type: string
      summary: delete a book by ID
      tags:
      - books_v1
    get:
      consumes:
      - application/json
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.book'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: get a book by ID
      tags:
      - books_v1
  /api/v1/queries:
    get:
      consumes:
      - application/json
      parameters:
      - description: MandateQuery1
        in: query
        name: MandateQuery1
        required: true
        type: string
      - description: OptionalQuery1
        in: query
        name: OptionalQuery1
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.QueryParamsv1'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: queries API
      tags:
      - queries
  /api/v2/books:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.book2'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: get all books
      tags:
      - books_v2
    post:
      consumes:
      - application/json
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.book2'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: create a new book
      tags:
      - books_v2
  /api/v2/books/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.book2'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "409":
          description: Unable to delete book
          schema:
            type: string
      summary: delete a book by ID
      tags:
      - books_v2
    get:
      consumes:
      - application/json
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.book2'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: get a book by ID
      tags:
      - books_v2
  /api/v2/queries:
    get:
      consumes:
      - application/json
      parameters:
      - description: MandateQuery1
        in: query
        name: MandateQuery1
        required: true
        type: string
      - description: MandateQuery1
        in: query
        name: MandateQuery2
        required: true
        type: string
      - description: MandateQuery1
        in: query
        name: MandateQuery3
        required: true
        type: string
      - description: OptionalQuery1
        in: query
        name: OptionalQuery1
        type: string
      - description: OptionalQuery1
        in: query
        name: OptionalQuery2
        type: string
      - description: OptionalQuery1
        in: query
        name: OptionalQuery3
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.QueryParamsv2'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: queries API
      tags:
      - queries
swagger: "2.0"
